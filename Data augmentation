[ ]
%%%%%%%%%%%Data augementation flip+rotation90 rotation 180%%%%%%%%%%%%%%5
import cv2
import os
import shutil

# Path to the folder containing your images
folder_path = "/content/Images"

# Output directory for augmented images
output_folder = "augmented data"

# Create the output folder if it doesn't exist
os.makedirs(output_folder, exist_ok=True)

# List all files in the folder
files = os.listdir(folder_path)

# Copy original images to the output folder
for file in files:
    if file.endswith(".png") or file.endswith(".jpg"):
        shutil.copy(os.path.join(folder_path, file), output_folder)

# Loop through each file in the output folder
for file in os.listdir(output_folder):
    if file.endswith(".png") or file.endswith(".jpg"):
        # Read the image
        img = cv2.imread(os.path.join(output_folder, file))

        # Perform flipping
        flipped_img = cv2.flip(img, 1)  # Flip horizontally
        cv2.imwrite(os.path.join(output_folder, file.split(".")[0] + "_flipped.jpg"), flipped_img)

        # Perform vertical flipping
        flipped_img_vertical = cv2.flip(img, 0)  # Flip vertically
        cv2.imwrite(os.path.join(output_folder, file.split(".")[0] + "_flipped_vertical.jpg"), flipped_img_vertical)


        # Perform rotation 90 degrees
        rotated_img_90 = cv2.rotate(img, cv2.ROTATE_90_CLOCKWISE)
        cv2.imwrite(os.path.join(output_folder, file.split(".")[0] + "_rotated_90.jpg"), rotated_img_90)

        # Perform rotation 180 degrees
        rotated_img_180 = cv2.rotate(img, cv2.ROTATE_180)
        cv2.imwrite(os.path.join(output_folder, file.split(".")[0] + "_rotated_180.jpg"), rotated_img_180)

%%%%%%%%%%Data augementation rotation from -angle to postive angle%%%%%%%%%%%%%%

# rotation operation for many images for data augmentation
import cv2
import os

# Function to perform data augmentation with restricted rotation angles
def augment_data(image):
    augmented_images = []

    # Perform rotation from -5 to +5 degrees
    for angle in range(-5, 6):
        # Rotate the image by the current angle
        rotated_image = cv2.rotate(image, cv2.ROTATE_90_CLOCKWISE if angle > 0 else cv2.ROTATE_90_COUNTERCLOCKWISE)
        M = cv2.getRotationMatrix2D((rotated_image.shape[1] / 2, rotated_image.shape[0] / 2), angle, 1)
        rotated_image = cv2.warpAffine(rotated_image, M, (rotated_image.shape[1], rotated_image.shape[0]))
        augmented_images.append(rotated_image)

    return augmented_images

# Path to the folder containing the images
folder_path = "/content/augmented data180*5"

# Get the list of filenames in the folder
file_names = sorted(os.listdir(folder_path))

# Iterate over the filenames and perform data augmentation on each image
for file_name in file_names:
    # Construct the full path to the image
    image_path = os.path.join(folder_path, file_name)

    # Load the image
    image = cv2.imread(image_path)

    # Check if the image was read successfully
    if image is None:
        print(f"Error: Unable to read image '{file_name}'")
        continue

    # Perform data augmentation
    augmented_images = augment_data(image)

    # Save augmented images
    output_dir = "augmented data 180*5*10"
    os.makedirs(output_dir, exist_ok=True)
    for i, augmented_image in enumerate(augmented_images):
        output_path = os.path.join(output_dir, f"{os.path.splitext(file_name)[0]}_augmented_{i}.jpg")
        cv2.imwrite(output_path, augmented_image)
